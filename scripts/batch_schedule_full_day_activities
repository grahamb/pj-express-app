'use strict';

const models = require('../models');
const moment = require('moment');
const Promise = models.sequelize.Promise;
const createScheduleForUnit = require('../lib/schedules/createScheduleForUnit');

const FULL_DAY_ACTIVITIES = [12, 6];

require('es6-shim');

function getAllUnits() {
  'use strict';
  const sort = process.env.sort || 'ASC';
  return models.Unit.findAll({
    where: {
      final_payment_date: {
        $not: null
      }
    },
    order: `final_payment_date ${sort}`,
    include: [
      {
        model: models.ProgramSelection
      },
      {
        model: models.ProgramPeriod,
        include: [{all:true}]
      }
    ]
  });
};

function getUnit(id) {
  return models.Unit.find({
    where: {id: id},
    include: [
      models.ProgramSelection,
      {
        model: models.ProgramPeriod,
        include: [{all:true}]
      }
    ]
  });
};

const main = Promise.coroutine(function* () {
  let units = yield getAllUnits();
  let data = units.map(function(unit) {
    let data = {
      unit_id: unit.id,
      program_selection: FULL_DAY_ACTIVITIES,
      periodsToAssign: 11,
      periodsAssigned: !unit.ProgramPeriods.length ? 0 : unit.ProgramPeriods.map(function(p) {
        return p.spans_periods
      }).reduce(function(p, c) { return p + c })
    };

    return data;
  });

  let counter = 0;
  const len = FULL_DAY_ACTIVITIES.length;
  while (counter < len) {
    console.log("\n\n Run %d", counter);
    for (var i = 0; i < data.length; i++) {
      console.log(data[i]);
      console.log('\n');
      let result = yield createScheduleForUnit(data[i], counter);
      data[i] = result;
    };
    counter++;
  }
  console.log(data);
  process.exit();
});

main();